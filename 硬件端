#include <ESP8266.h>
#include <Servo.h>

#ifdef ESP32
#error "This code is not recommended to run on the ESP32 platform! Please check your Tools->Board setting."
#endif
#if defined(__AVR_ATmega32U4__) || defined(__AVR_ATmega1284P__) || defined (__AVR_ATmega644P__) || defined(__AVR_ATmega128RFA1__)
#define EspSerial Serial1
#define UARTSPEED  115200           //如果是core+，就设置为Serial1
#endif

#if defined (__AVR_ATmega168__) || defined (__AVR_ATmega328__) || defined (__AVR_ATmega328P__)
#include <SoftwareSerial.h>
SoftwareSerial mySerial(2, 3); //设置软串口，串口打印
#define EspSerial mySerial
#define UARTSPEED  9600             //如果是core，就设置为Serial
#endif

#define SSID        F("baba")
#define PASSWORD    F("12345678")
#define HOST_NAME   F("api.heclouds.com")
#define HOST_PORT   (80)

static const byte  GETDATA[]  PROGMEM = {
  "GET https://api.heclouds.com/devices/502981115/datapoints?datastream_id=a&limit=1 HTTP/1.1\r\nHost:api.heclouds.com\r\napi-key:xlwb8GOzpWV6RaRw=6katY7HgzE=\r\nConnection: close\r\n\r\n"
};
/* "GET https://api.heclouds.com/devices/23334240/datapoints?datastream_id=id,status,precent&limit=1 //url+  【 datapoints？datastream id=】 数据名称【&limit=1】）表示获取一个数据
    HTTP/1.1\r\n
    Host:api.heclouds.com//域名
    \r\n
    api-key:xlwb8GOzpWV6RaRw=6katY7HgzE=//设备APIKEY
    \r\nConnection: close\r\n\r\n"
*/
ESP8266 wifi(&EspSerial);
Servo myservo;
void setup(void)
{
  myservo.attach(10);
  analogReference(INTERNAL);  //调用板载1.1V基准源
  Serial.begin(9600);
  while (!Serial); // wait for Leonardo enumeration, others continue immediately
  Serial.print(F("setup begin\r\n"));
  delay(100);

  WifiInit(EspSerial, UARTSPEED);//设置串口波特率

  Serial.print(F("FW Version:"));
  Serial.println(wifi.getVersion().c_str());

  if (wifi.setOprToStationSoftAP()) {
    Serial.print(F("to station + softap ok\r\n"));
  } else {
    Serial.print(F("to station + softap err\r\n"));
  }

  if (wifi.joinAP(SSID, PASSWORD)) {
    Serial.print(F("Join AP success\r\n"));

    Serial.print(F("IP:"));
    Serial.println( wifi.getLocalIP().c_str());
  } else {
    Serial.print(F("Join AP failure\r\n"));
  }

  if (wifi.disableMUX()) {
    Serial.print(F("single ok\r\n"));
  } else {
    Serial.print(F("single err\r\n"));
  }//关闭多用户连接

  Serial.print(F("setup end\r\n"));
}

void loop(void)
{
  if (wifi.createTCP(HOST_NAME, HOST_PORT)) {
    Serial.print(F("create tcp ok\r\n"));
  } else {
    Serial.print(F("create tcp err\r\n"));
  }
  //char *hello = "GET /testwifi/index.html HTTP/1.0\r\nHost: www.adafruit.com\r\nConnection: close\r\n\r\n";
  //wifi.send((const uint8_t*)hello, strlen(hello));  //直接发送

  wifi.sendFromFlash(GETDATA, sizeof(GETDATA)); //从Flash读取发送内容，节约内存
  int pos = 0;
  uint8_t buffer[512] = {0};                                       //typedef signed char     int8_t; typedef short int     int16_t; typedef int    int32_t; typedef long int    int64_t;
  uint32_t len = wifi.recv(buffer, sizeof(buffer), 20000);
  if (len > 0) {
    Serial.print(F("Received:["));
    for (uint32_t i = 0; i < len; i++) {
      if ((char)buffer[i] == 'v' && (char)buffer[i + 1] == 'a' && (char)buffer[i + 2] == 'l' && (char)buffer[i + 3] == 'u' && (char)buffer[i + 4] == 'e') {
        if ((char)buffer[i + 7] == '1')
        {
          for (pos = 0; pos < 180; pos += 1)
          {
            myservo.write(pos);
            delay(15);
          }
        }
        else if ((char)buffer[i + 7] == '2')
          {
              analog Write(10,0);
              delay(15);
          }
        }
        Serial.print((char)buffer[i]);
      }
      Serial.print(F("]\r\n"));
    }
    if (wifi.releaseTCP()) {
      Serial.print(F("release tcp ok\r\n"));
    } else {
      Serial.print(F("release tcp err\r\n"));
    }
    //while (1);
    delay(5000);
  }
